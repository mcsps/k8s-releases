image: docker:latest
cache: {}

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  # DOCKER_TLS_CERTDIR: ''
  BRANCH: $CI_COMMIT_REF_NAME

stages:
  - fetchreleasenote

before_script:
 - apk add --update --no-cache findutils bash curl wget git jq && apk upgrade
 - git remote set-url --push origin https://oauth2:$DEPLOY_TOKEN@gitlab.dol.telekom.de/mcsps/k8s-releases.git
 - git config --global user.email 'mcsps-dis@telekom.de'
 - git config --global user.name 'Deploy User'

check-release:
  tags:
    - k8s-executor
  stage: fetchreleasenote
  script:
  # Release Notes Rancher
    -  ORG=rancher
    -  REPO=rancher
    -  RTAG=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    -  DESC=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | jq .body)
    -  LTAG=$(git tag | sed 's/${REPO}-//' | tail -1 )
    -  >
       if [[ "$LTAG" != "$RTAG" ]]; then
         if ! git tag | grep ${REPO}-${RTAG}; then
           git tag ${REPO}-${RTAG} 
           git push origin --tags
           echo -en ${DESC} > ${REPO}/${RTAG}.md
           sed -i 's/"//g' ${REPO}/${RTAG}.md
           sed -i 's/\\r//g' ${REPO}/${RTAG}.md
           git add ${REPO}/${RTAG}.md
           git commit -m "add release desc"
           git push origin HEAD:${BRANCH}
         fi
       else
         echo "Nothing to do ${REPO}"
       fi
  # Release Notes kubernetes
    -  ORG=kubernetes
    -  REPO=kubernetes
    -  RTAG=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    -  DESC=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | jq .body)
    -  LTAG=$(git tag | sed 's/${REPO}-//' | tail -1 )
    -  >
       if [[ "$LTAG" != "$RTAG" ]]; then
         if ! git tag | grep ${REPO}-${RTAG}; then
           git tag ${REPO}-${RTAG} 
           git push origin --tags
           echo -en ${DESC} > ${REPO}/${RTAG}.md
           sed -i 's/"//g' ${REPO}/${RTAG}.md
           sed -i 's/\\r//g' ${REPO}/${RTAG}.md
           git add ${REPO}/${RTAG}.md
           git commit -m "add release desc"
           git push origin HEAD:${BRANCH}
         fi
       else
         echo "Nothing to do ${REPO}"
       fi
  # Release Notes Terraform
    -  ORG=hashicorp
    -  REPO=terraform
    -  RTAG=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    -  DESC=$(curl --silent "https://api.github.com/repos/${ORG}/${REPO}/releases/latest" | jq .body)
    -  LTAG=$(git tag | sed 's/${REPO}-//' | tail -1 )
    -  >
       if [[ "$LTAG" != "$RTAG" ]]; then
         if ! git tag | grep ${REPO}-${RTAG}; then
           git tag ${REPO}-${RTAG} 
           git push origin --tags
           echo -en ${DESC} > ${REPO}/${RTAG}.md
           sed -i 's/"//g' ${REPO}/${RTAG}.md
           sed -i 's/\\r//g' ${REPO}/${RTAG}.md
           git add ${REPO}/${RTAG}.md
           git commit -m "add release desc"
           git push origin HEAD:${BRANCH}
         fi
       else
         echo "Nothing to do ${REPO}"
       fi
  # Build index
    -  cat tpl/1.rst > index.rst
    -  cat tpl/2.rst >> index.rst
    -  find kubernetes/ -name "*.md" -printf "   %p"  >> index.rst
    -  cat tpl/3.rst >> index.rst
    -  find rancher/ -name "*.md" -printf "   %p" >> index.rst
    -  cat tpl/4.rst >> index.rst
    -  find terraform/ -name "*.md" -printf "   %p" >> index.rst
    -  cat tpl/5.rst >> index.rst
    -  find rancher/ -name "*.md" -printf "   %p" >> index.rst
    -  git add index.rst
    -  git commit -m "build index"
    -  git push origin HEAD:${BRANCH}
  except: 
    - tags
